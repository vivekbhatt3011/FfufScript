import subprocess
import json
import argparse

# Function to run FFUF with specified parameters and process the output
def run_ffuf(url, wordlist, filters, output):
    """Runs FFUF with specified parameters and processes the output."""
    
    # Construct the FFUF command with URL, wordlist, and output file
    cmd = [
        "ffuf", "-u", url, "-w", wordlist, "-o", output, "-of", "json"
    ]
    
    # Add optional filters if provided (e.g., status codes, content size)
    if filters:
        for key, value in filters.items():
            cmd.extend([key, str(value)])
    
    # Execute the FFUF command
    subprocess.run(cmd)
    
    # Process the JSON output file generated by FFUF
    try:
        with open(output, "r") as file:
            results = json.load(file)
            
            # Loop through the results and print found URLs with status and size
            for entry in results.get("results", []):
                print(f"Found: {entry['url']} (Status: {entry['status']}, Size: {entry['length']})")
    except Exception as e:
        # Handle errors in processing the JSON file
        print(f"Error processing results: {e}")

# Main execution block
if __name__ == "__main__":
    # Initialize argument parser to handle command-line inputs
    parser = argparse.ArgumentParser(description="Automate FFUF for fuzzing web targets.")
    
    # Required arguments
    parser.add_argument("-u", "--url", required=True, help="Target URL with FUZZ placeholder")
    parser.add_argument("-w", "--wordlist", required=True, help="Path to wordlist file")
    parser.add_argument("-o", "--output", default="results.json", help="Output JSON file")
    
    # Optional filters for excluding certain responses
    parser.add_argument("-fc", "--filter-code", type=int, help="Filter out specific HTTP status codes")
    parser.add_argument("-fs", "--filter-size", type=int, help="Filter out responses by size")
    
    # Parse command-line arguments
    args = parser.parse_args()
    
    # Store filters in a dictionary if provided
    filters = {}
    if args.filter_code:
        filters["-fc"] = args.filter_code
    if args.filter_size:
        filters["-fs"] = args.filter_size
    
    # Run FFUF with the provided parameters
    run_ffuf(args.url, args.wordlist, filters, args.output)
